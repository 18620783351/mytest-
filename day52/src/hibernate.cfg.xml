<?xml version="1.0" encoding="UTF-8"?>
<!-- 导入约束 -->

<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
	<session-factory>
 <!-- 1、连接数据库的基本信息 :hibernate\hibernate-release-5.0.7.Final\project\etc\hibernate.properties--> 
	<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
	<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/cd</property>
	<property name="hibernate.connection.username">root</property>
	<property name="hibernate.connection.password">root</property>
<!-- #hibernate.connection.driver_class com.mysql.jdbc.Driver
	 #hibernate.connection.url jdbc:mysql://localhost:3306/cd
	 #hibernate.connection.username gavin
	 #hibernate.connection.password	 -->
  
<!-- 2、hibernate 的基本配置 --> 
	<!-- 数据库的方言 -->	
	 <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
<!-- 是否显示 SQL 语句 --> 
	 <property name="hibernate.show_sql">true</property>
<!-- 是否格式化 SQL 语句 --> 
	 <property name="hibernate.format_sql">true</property>
	 
 <!-- 是否让 hibernate 根据表结构的变化来生成 DDL 语句 
							 DDL:数据定义语言 
							 hibernate 可以根据映射文件来为我们生成数据库的表结构。 
							 但是他不能生成数据库。 
							 hbm2ddl.auto 的取值 
							 * none:不用 Hibernate 自动生成表. 
							 * create:每次都会创建一个新的表.(测试) 
							 * create-drop:每次都会创建一个新的表，执行程序结束后删除这个表.(测试) 
							 * update:如果数据库中有表，使用原来的表，如果没有表，创建一个新表.可以更新表
							结构。 
							 * validate:只会使用原有的表.对映射关系进行校验.--> 
	 <property name="hibernate.hbm2ddl.auto">update</property>
<!--#hibernate.connection.provider_class org.hibernate.connection.C3P0ConnectionProvider  -->
	
	<!-- 把 session 绑定到当前线程上 -->
	<property name="hibernate.current_session_context_class">thread</property>
	
	<!-- 配置数据源的提供商 --> 
	<property name="hibernate.connection.provider_class"> 
	 org.hibernate.connection.C3P0ConnectionProvider 
	</property> 
	
	
	 <!-- 3、映射文件的位置 -->
	 <mapping resource="com/itheima/entity/Customer.hbm.xml"/>
	</session-factory>
</hibernate-configuration>
	